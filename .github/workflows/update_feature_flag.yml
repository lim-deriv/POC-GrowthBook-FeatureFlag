name: Update Feature Flag

on:
  push:
    branch:
      - main
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  Feature_Flag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get existing Feature Flags
        env:
          GROWTHBOOK_API_KEY: ${{ secrets.FEATURE_FLAG_API_KEY }}
        run: |
          curl https://api.growthbook.io/api/v1/features \
            -H "Authorization: Bearer $GROWTHBOOK_API_KEY" \
            -H "Content-Type: application/json"

      - name: Update existing Feature Flags's default value
        env:
          GROWTHBOOK_API_KEY: ${{ secrets.FEATURE_FLAG_API_KEY }}
        run: |
          git fetch origin ${{ github.event.before }}
          changed_yml_files=$(git diff --name-only ${{ github.event.before }} -- ':!.github')
          echo $changed_yml_files

          # Iterate over each changed YAML file and print them
          for file in $changed_yml_files; do
            
            # Extract variables
            project=$(yq eval '.project' ./$file)
            feature=$(yq eval '.feature' ./$file)
            default_value=$(yq eval '.default_value' ./$file | sed 's/"/\\"/g')
            tags=$(yq eval '.tags[]' ./$file | jq -R . | jq -s .)

            # update default variable
            curl -X POST "https://api.growthbook.io/api/v1/features/$feature" \
                -H "Authorization: Bearer $GROWTHBOOK_API_KEY" \
                -H "Content-Type: application/json" \
                -v \
                -d "{\"project\": \"$project\", \
                     \"defaultValue\": \"$default_value\", \
                     \"tags\": $tags}"
          done
      - name: Update existing Feature Flags's force value
        env:
          GROWTHBOOK_API_KEY: ${{ secrets.FEATURE_FLAG_API_KEY }}
        run: |
          git fetch origin ${{ github.event.before }}
          changed_yml_files=$(git diff --name-only ${{ github.event.before }} -- ':!.github')

          # Iterate over each changed YAML file and print them
          for file in $changed_yml_files; do
            
            # Extract variables
            project=$(yq eval '.project' ./$file)
            feature=$(yq eval '.feature' ./$file)
            default_value=$(yq eval '.default_value' ./$file)
            tags=$(yq eval '.tags[]' ./$file | jq -R . | jq -s .)
            prod_value=$(yq eval '.environments.prod.value' ./$file)
            staging_value=$(yq eval '.environments.staging.value' ./$file)
            qa_value=$(yq eval '.environments.qa.value' ./$file)

            # update force values on different environment
            curl -X POST "https://api.growthbook.io/api/v1/features/$feature" \
                -H "Authorization: Bearer $GROWTHBOOK_API_KEY" \
                -H "Content-Type: application/json" \
                -d "{\"project\": \"$project\", \
                     \"defaultValue\": \"$default_value\", \
                     \"tags\": $tags, \
                     \"environments\": {  \
                     \"production\": { \"enabled\": true, \"rules\": [{\"type\": \"force\",\"value\": \"$prod_value\"}] }, \
                     \"staging\": { \"enabled\": true, \"rules\": [{\"type\": \"force\",\"value\": \"$staging_value\"}] }, \
                     \"qa\": { \"enabled\": true, \"rules\": [{\"type\": \"force\",\"value\": \"$qa_value\"}] } \
                    } 
                    }"
          done
