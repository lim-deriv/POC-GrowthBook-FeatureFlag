name: Update Feature Flag

on:
  push:
    branch:
      - main
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  Feature_Flag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get existing config from yml
        run: |
          changed_yml_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- ':!.github')

          # Iterate over each changed YAML file and print them
          for file in $changed_yml_files; do
              echo "$file"
          done
          project=$(yq eval '.project' ./MyProject/F1_status_boolean.yml)
          feature=$(yq eval '.feature' ./MyProject/F1_status_boolean.yml)
          default_value=$(yq eval '.default_value' ./MyProject/F1_status_boolean.yml)
          tags=$(yq eval '.tags[]' ./MyProject/F1_status_boolean.yml | sed 's/- //')
          prod_value=$(yq eval '.environments.prod.value' ./MyProject/F1_status_boolean.yml)
          staging_value=$(yq eval '.environments.staging.value' ./MyProject/F1_status_boolean.yml)
          qa_value=$(yq eval '.environments.qa.value' ./MyProject/F1_status_boolean.yml)

          echo "Project: $project"
          echo "Feature: $feature"
          echo "Default Value: $default_value"
          echo "Tags: ${tags[@]}"
          echo "Prod Value: $prod_value"
          echo "Staging Value: $staging_value"
          echo "QA Value: $qa_value"
      # - name: Get existing Feature Flags
      #   env:
      #     GROWTHBOOK_API_KEY: ${{ secrets.FEATURE_FLAG_API_KEY }}
      #   run: |
      #     curl https://api.growthbook.io/api/v1/features \
      #       -H "Authorization: Bearer $GROWTHBOOK_API_KEY" \
      #       -H "Content-Type: application/json"
      # - name: Update existing Feature Flags
      #   env:
      #     GROWTHBOOK_API_KEY: ${{ secrets.FEATURE_FLAG_API_KEY }}
      #   run: |
      #     list=$(yq eval 'to_entries[] | "\(.value | tojson)"' ./MyProject/details.yml)
      #     echo $list
      #     for feature in $(echo "$list" | jq -r 'keys[]'); do
      #       value=$(echo "$list" | jq -r ".$feature")
      #       curl -X POST "https://api.growthbook.io/api/v1/features/$feature" \
      #         -H "Authorization: Bearer $GROWTHBOOK_API_KEY" \
      #         -H "Content-Type: application/json" \
      #         -d "{\"defaultValue\": \"$value\"}"
      #     done

      #     #environment
      #     #can check if environment key and to decide whether to enable or disable
